<!-- multaddProcess BPEL Process [Generated by the Eclipse BPEL Designer]  -->
<!-- Date: Tue Jan 15 04:47:26 AST 2013 -->

<bpel:process name="multaddProcess"
         targetNamespace="http://matrixop.tps"
         suppressJoinFailure="yes"
         xmlns:tns="http://matrixop.tps"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns="http://www.example.org/MatrixService/">
    <!-- Import the client WSDL -->
    <bpel:import namespace="http://www.example.org/MatrixService/" location="MatrixService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import location="multaddProcessArtifacts.wsdl" namespace="http://matrixop.tps" 
	        importType="http://schemas.xmlsoap.org/wsdl/" />
	        
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!--
        The 'client' role represents the requester of this service. It is 
        used for callback. The location and correlation information associated
        with the client role are automatically set using WS-Addressing.
        -->
        <bpel:partnerLink name="client"
                     partnerLinkType="tns:multaddProcess"
                     myRole="multaddProcessProvider"
                     partnerRole="multaddProcessRequester"
                     />
        
        
        <bpel:partnerLink name="MatrixOP_PL" partnerLinkType="tns:MatrixOP_PLT" partnerRole="MatrixOP_Role"></bpel:partnerLink>
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        <bpel:variable name="input"
                  messageType="tns:multaddProcessRequestMessage"/>
                  
        <!-- Reference to the message that will be sent back to the 
             requester during callback
             -->
        <bpel:variable name="output"
                  messageType="tns:multaddProcessResponseMessage"/>
        <bpel:variable name="MatrixOP_PLRequest" messageType="ns:doMatrixOpRequest"></bpel:variable>
        <bpel:variable name="MatrixOP_PLRequest2" messageType="ns:doMatrixOpRequest"></bpel:variable>
        <bpel:variable name="MatrixOP_PLResponse" messageType="ns:doMatrixOpResponse"></bpel:variable>
         <bpel:variable name="MatrixOP_PLResponse2" messageType="ns:doMatrixOpResponse"></bpel:variable>
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->         
    <bpel:correlationSets>
        <bpel:correlationSet name="CS" properties="tns:MyCS"></bpel:correlationSet>
    </bpel:correlationSets>
    <bpel:sequence name="main">
        
        <!-- Receive input from requestor. 
             Note: This maps to operation defined in multaddProcess.wsdl 
             -->
        
        <bpel:flow name="Flow"><bpel:sequence name="A1B1">
                <bpel:receive name="ReceiveA1B1" partnerLink="client" createInstance="yes" operation="initiate" portType="tns:multaddProcess" variable="input">
                    <bpel:correlations>
                        <bpel:correlation set="CS" initiate="yes"></bpel:correlation>
                    </bpel:correlations>
                </bpel:receive>
                <bpel:assign validate="no" name="Assign">
                    <bpel:copy>
                        <bpel:from part="payload" variable="input">
                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                <![CDATA[tns:input]]>
                            </bpel:query>
                        </bpel:from>
                        <bpel:to part="doMatrixOpRequest" variable="MatrixOP_PLRequest"></bpel:to>
                    </bpel:copy>
                    
                    
                </bpel:assign>
                <bpel:invoke name="InvokeMultiplyA1B1" partnerLink="MatrixOP_PL" operation="doMatrixOp" portType="ns:MatrixService" inputVariable="MatrixOP_PLRequest" outputVariable="MatrixOP_PLResponse">
                </bpel:invoke>
                <bpel:receive name="ReceiveC1" partnerLink="client" operation="initiate" portType="tns:multaddProcess" variable="input"></bpel:receive>
                <bpel:invoke name="InvokeCopyC1" partnerLink="MatrixOP_PL" operation="doMatrixOp" portType="ns:MatrixService" inputVariable="MatrixOP_PLRequest" outputVariable="MatrixOP_PLResponse">
                </bpel:invoke>
                <bpel:receive name="ReceiveD1" partnerLink="client" operation="initiate" portType="tns:multaddProcess" variable="input">
                    <bpel:correlations>
                        <bpel:correlation set="CS" initiate="no"></bpel:correlation>
                    </bpel:correlations>
                </bpel:receive>
            </bpel:sequence><bpel:sequence name="A2B2">
                <bpel:receive name="ReceiveA2B2" partnerLink="client" createInstance="no" operation="initiate" portType="tns:multaddProcess" variable="input">
                    <bpel:correlations>
                        <bpel:correlation set="CS" initiate="no"></bpel:correlation>
                    </bpel:correlations>
                </bpel:receive>
                <bpel:assign validate="no" name="Assign1">
                    <bpel:copy>
                        <bpel:from part="payload" variable="input">
                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                <![CDATA[tns:input]]>
                            </bpel:query>
                        </bpel:from>
                        <bpel:to part="doMatrixOpRequest" variable="MatrixOP_PLRequest2"></bpel:to>
                    </bpel:copy>
                    
                </bpel:assign>
                <bpel:invoke name="InvokeMultiplyA2B2" partnerLink="MatrixOP_PL" operation="doMatrixOp" portType="ns:MatrixService" inputVariable="MatrixOP_PLRequest2" outputVariable="MatrixOP_PLResponse2">
                </bpel:invoke>
                <bpel:receive name="ReceiveC2" partnerLink="client" operation="initiate" portType="tns:multaddProcess" variable="input">
                    <bpel:correlations>
                        <bpel:correlation set="CS" initiate="no"></bpel:correlation>
                    </bpel:correlations>
                </bpel:receive>
                <bpel:invoke name="InvokeCopyC2" partnerLink="MatrixOP_PL" operation="doMatrixOp" portType="ns:MatrixService" inputVariable="MatrixOP_PLRequest2" outputVariable="MatrixOP_PLResponse2">
                </bpel:invoke>
                <bpel:receive name="ReceiveD2" partnerLink="client" operation="initiate" portType="tns:multaddProcess" variable="input">
                    <bpel:correlations>
                        <bpel:correlation set="CS" initiate="no"></bpel:correlation>
                    </bpel:correlations>
                </bpel:receive>
            </bpel:sequence></bpel:flow>
        
        
        <!-- Asynchronous callback to the requester.
             Note: the callback location and correlation id is transparently handled 
             using WS-addressing.
             -->
        <bpel:assign validate="no" name="Assign2">
            <bpel:copy>
                <bpel:from>
                    <bpel:literal xml:space="preserve">{&quot;name&quot;:&quot;add&quot;, &quot;pathA&quot; : &quot;/home/mo_usr/Matrices/C1&quot; , &quot;pathB&quot; : &quot;/home/mo_usr/Matrices/C2&quot; ,  &quot;callBack&quot; : &quot;localhost:8080/HelloClient/callBack4&quot;);}</bpel:literal>
                </bpel:from>
                <bpel:to part="doMatrixOpRequest" variable="MatrixOP_PLRequest"></bpel:to>
            </bpel:copy>
        </bpel:assign>
        <bpel:invoke name="InvokeAddD1D2" partnerLink="MatrixOP_PL" operation="doMatrixOp" portType="ns:MatrixService" inputVariable="MatrixOP_PLRequest" outputVariable="MatrixOP_PLResponse">
        </bpel:invoke>
        <bpel:invoke name="callbackClient" 
                partnerLink="client"
                portType="tns:multaddProcessCallback"
                operation="onResult" 
                inputVariable="output"
                />
    </bpel:sequence>
</bpel:process>

